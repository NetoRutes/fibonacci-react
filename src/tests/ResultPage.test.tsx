import { render, screen, fireEvent } from '@testing-library/react';
import { MemoryRouter } from 'react-router-dom';
import ResultPage from '../pages/ResultPage';

// This file was pre generated by GPT and adjusted by Wellington Rutes

jest.mock('react-router-dom', () => ({
    ...jest.requireActual('react-router-dom'),
    useNavigate: () => jest.fn(),
}));

describe('ResultPage', () => {
    const mockLocationState = { fibonacciNumbers: [0, 1, 1, 2, 3, 5, 8] };
    
    it('should display the Fibonacci sequence', () => {
        render(
            <MemoryRouter initialEntries={[{ pathname: '/result', state: mockLocationState }]}>
                <ResultPage />
            </MemoryRouter>
        );

        expect(screen.getByText(/Fibonacci Sequence:/i)).toBeInTheDocument();
        
        expect(screen.getByText(/0/i)).toBeInTheDocument();
        expect(screen.getByText(/1/i)).toBeInTheDocument();
        expect(screen.getByText(/2/i)).toBeInTheDocument();
        expect(screen.getByText(/3/i)).toBeInTheDocument();
        expect(screen.getByText(/5/i)).toBeInTheDocument();
        expect(screen.getByText(/8/i)).toBeInTheDocument();
    });

    it('should navigate to the home page when "Generate Another Sequence" button is clicked', () => {
        const mockNavigate = jest.fn();
        jest.spyOn(require('react-router-dom'), 'useNavigate').mockReturnValue(mockNavigate);

        render(
            <MemoryRouter initialEntries={[{ pathname: '/result', state: mockLocationState }]}>
                <ResultPage />
            </MemoryRouter>
        );

        fireEvent.click(screen.getByText('Generate Another Sequence'));
        expect(mockNavigate).toHaveBeenCalledWith('/');
    });
});
